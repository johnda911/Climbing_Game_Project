{"version":3,"file":"main.js","mappings":"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","sources":["webpack://climbing_game_project/webpack/bootstrap","webpack://climbing_game_project/webpack/runtime/global","webpack://climbing_game_project/webpack/runtime/publicPath","webpack://climbing_game_project/./src/scripts/constants.js","webpack://climbing_game_project/./src/scripts/rock.js","webpack://climbing_game_project/./src/scripts/climber.js","webpack://climbing_game_project/./src/scripts/game.js","webpack://climbing_game_project/./src/index.js"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","export const CONSTANTS = {\n    // EDGE_BUFFER: 30,\n    // WARM_UP_SECONDS: 1,\n    CANVAS_HEIGHT: 800,\n    CANVAS_WIDTH: 600,\n    ROCK_HEIGHT: 35,\n    ROCK_WIDTH: 75,\n    CLIMBER_HEIGHT: 140,\n    CLIMBER_WIDTH: 140,\n    GRAVITY: 0.35\n};\n\nexport function getVerticalGap() {\n    return (CONSTANTS.CANVAS_HEIGHT - 40) / CONSTANTS.TOTAL_ROCKS;\n}\n","import { CONSTANTS } from \"./constants.js\";\nimport banana from \"../imgs/banana.png\";\n\nexport default class Rock {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this.width = CONSTANTS.ROCK_WIDTH;\n        this.height = CONSTANTS.ROCK_HEIGHT;\n        this.direction = \"right\";\n        this.moveTime = 10;\n\n        this.img = new Image(CONSTANTS.ROCK_WIDTH, CONSTANTS.ROCK_HEIGHT);\n        this.img.onload = () => this.draw();\n        this.img.src = banana;\n        const canvas = document.getElementById('canvas');\n        const ctx = canvas.getContext(\"2d\");\n        this.ctx = ctx;\n        this.canvas = canvas;\n\n        this.draw();\n    }\n\n    draw() {\n        this.ctx.drawImage(this.img, this.x, this.y, this.width, this.height);\n    }\n\n}\n\n\n\n","import { CONSTANTS } from \"./constants.js\";\nimport leftMonkeyImg from \"../imgs/monkey/l4.png\";\nimport rightMonkeyImg from \"../imgs/monkey/r4.png\";\nimport l0 from \"../imgs/monkey/l0.png\";\nimport l1 from \"../imgs/monkey/l1.png\";\nimport l2 from \"../imgs/monkey/l2.png\";\nimport l3 from \"../imgs/monkey/l3.png\";\nimport l4 from \"../imgs/monkey/l4.png\";\nimport l5 from \"../imgs/monkey/l5.png\";\nimport l6 from \"../imgs/monkey/l6.png\";\nimport l7 from \"../imgs/monkey/l7.png\";\nimport l8 from \"../imgs/monkey/l8.png\";\nimport l9 from \"../imgs/monkey/l9.png\";\nimport l10 from \"../imgs/monkey/l10.png\";\nimport l11 from \"../imgs/monkey/l11.png\";\n\n\nconst MK_IMG0 = createImg(l0);\nconst MK_IMG1 = createImg(l1);\nconst MK_IMG2 = createImg(l2);\nconst MK_IMG3 = createImg(l3);\nconst MK_IMG4 = createImg(l4);\nconst MK_IMG5 = createImg(l5);\nconst MK_IMG6 = createImg(l6);\nconst MK_IMG7 = createImg(l7);\nconst MK_IMG8 = createImg(l8);\nconst MK_IMG9 = createImg(l9);\nconst MK_IMG10 = createImg(l10);\nconst MK_IMG11 = createImg(l11);\n\nconst MONKEY_LEFT_IMGS = [MK_IMG0, MK_IMG1, MK_IMG2, MK_IMG3, MK_IMG4, MK_IMG5, MK_IMG6, MK_IMG7, MK_IMG8, MK_IMG9, MK_IMG10, MK_IMG11];\n\nfunction createImg(img) {\n    const myImg = new Image(70, 70);\n    myImg.src = img;\n    return myImg;\n}\n\nexport default class Climber {\n    constructor(rocks, rockParam) {\n\n        this.x = 250;\n        this.y = 670;\n        this.width = CONSTANTS.CLIMBER_WIDTH;\n        this.height = CONSTANTS.CLIMBER_HEIGHT;\n        this.gravity = CONSTANTS.GRAVITY;\n        this.xSpeed = 7;\n        this.ySpeed = 0;\n        this.isGameOver = false;\n        this.rocks = rocks;\n        this.rockParam = rockParam;\n        this.verticalElevated = 0;\n        this.stay = true;\n        this.score = 0;\n        this.holdingLeft = false;\n        this.holdingRight = false;\n        this.direction = \"left\";\n        this.counter = 0;\n        this.monkeyImgIdx = 0;\n\n        const canvas = document.getElementById('canvas');\n        const ctx = canvas.getContext(\"2d\");\n        this.ctx = ctx;\n        this.canvas = canvas;\n    }\n\n    update() {\n        if (!this.isGameOver && !this.stay) {\n            this.ySpeed += this.gravity;\n            if (this.y <= CONSTANTS.CANVAS_HEIGHT / 4 && this.ySpeed <= 0) {\n                //when going up, rock moves down\n                for (let i = 0; i < this.rocks.length; i++) {\n                    this.rocks[i].y -= this.ySpeed;\n                }\n            } else {\n                // climber moves at yspeed\n                this.y += this.ySpeed;\n            }\n            this.verticalElevated -= this.ySpeed;\n        } else if (this.isGameOver) {\n            // if fall down to the bottom, game over\n            this.showGameOver();\n        }\n\n        //when climbing to left\n        if (this.holdingLeft === true && !this.stay) {\n            // this.direction = \"left\";\n            // this.img = new Image(70, 70);\n            // this.img.onload = () => this.draw();\n            // this.img.src = leftMonkeyImg;\n\n            this.x -= this.xSpeed;\n            if (this.x <= -this.width) {\n                this.x = CONSTANTS.CANVAS_WIDTH;\n            }\n        }\n\n        //when climbing to right\n        if (this.holdingRight === true && !this.stay) {\n            // this.img = new Image(70, 70);\n            // this.img.onload = () => this.draw();\n            // this.img.src = rightMonkeyImg;\n\n            this.x += this.xSpeed;\n            if (this.x >= CONSTANTS.CANVAS_WIDTH) {\n                this.x = -this.width;\n            }\n        }\n\n        //Check for climb\n        for (let i = 0; i < this.rocks.length; i++) {\n            if (this.ySpeed >= 0) {\n                if (this.x >= this.rocks[i].x - this.width + 70\n                    && this.x <= this.rocks[i].x + this.rocks[i].width - 70\n                    && this.y >= this.rocks[i].y\n                    && this.y <= this.rocks[i].y + this.rocks[i].height - 5) {\n                    this.stay = true;\n                }\n            }\n        }\n\n        for (var i = this.rocks.length - 1; i > 0; i--) {\n            if (this.rocks[i].y > CONSTANTS.CANVAS_HEIGHT) {\n                this.rockParam.bottomRock = i + 1;\n                break;\n            }\n        }\n\n        if (this.y >= this.rocks[this.rockParam.bottomRock].y && !this.stay && this.ySpeed > 0) {\n            this.isGameOver = true;\n        }\n\n        if (this.rockParam.bottomRock >= 5950) {\n            this.rockMover();\n        }\n\n        // update mokey img for animation \n        if (this.img) {\n            this.counter += 1;\n            if (this.counter % 6 === 0) {\n                this.monkeyImgIdx = (this.monkeyImgIdx + 1) % 12;\n                this.img = MONKEY_LEFT_IMGS[this.monkeyImgIdx];\n            }\n        } else {\n            this.direction = \"left\";\n            this.img = MK_IMG4;\n        }\n    }\n\n    rockMover() {\n        let i = this.rockParam.bottomRock === 0 ? 1 : this.rockParam.bottomRock;\n\n        for (i; i < this.rockParam.bottomRock + 600; i++) {\n            if (i >= this.rocks.length) {\n                let x = Math.random() * (CONSTANTS.CANVAS_WIDTH - CONSTANTS.ROCK_WIDTH);\n                let y = this.rocks[i - 1].y - ((Math.random() * 80) + 35);\n                this.rocks.push(new Rock(x, y));\n            }\n        }\n\n        //Remove bananas out of canvas\n        for (let i = 0; i < this.rockParam.bottomRock - 2; i++) {\n            rocks.shift();\n        }\n    }\n\n    // climb is triggerred by key press\n    climb() {\n        this.stay = false;\n        this.ySpeed = -14;\n    }\n\n    showGameOver() {\n        this.ctx.fillStyle = \"#2c3e50\";\n        this.ctx.fillRect(CONSTANTS.CANVAS_WIDTH / 8, CONSTANTS.CANVAS_HEIGHT / 2.5, 460, 250);\n\n        //set the canvas style for the game over board\n        this.ctx.strokeRect(CONSTANTS.CANVAS_WIDTH / 8, CONSTANTS.CANVAS_HEIGHT / 2.5, 460, 250);\n        this.ctx.shadowColor = 'black';\n        this.ctx.shadowBlur = 20;\n        this.ctx.lineJoin = 'bevel';\n        this.ctx.lineWidth = 5;\n        this.ctx.strokeStyle = 'black';\n        this.ctx.globalAlpha = 0.5;\n\n        // set the font style for game over\n        this.ctx.font = \"50px Nunito\";\n        this.ctx.fillStyle = \"yellow\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"Game Over!\", CONSTANTS.CANVAS_WIDTH / 2, CONSTANTS.CANVAS_HEIGHT / 2);\n        this.ctx.font = \"35px Nunito\";\n        this.ctx.fillStyle = \"white\";\n        this.ctx.fillText(`Your score is ${this.score}`, CONSTANTS.CANVAS_WIDTH / 2, (CONSTANTS.CANVAS_HEIGHT / 2) + 50);\n        this.ctx.fillText(\"Press enter to restart\", CONSTANTS.CANVAS_WIDTH / 2, (CONSTANTS.CANVAS_HEIGHT / 2) + 100);\n    }\n\n    draw() {\n        // this.ctx.drawImage(this.img, 10, 10, 680, 700, this.x, this.y, this.width, this.height);\n        this.ctx.drawImage(this.img, this.x, this.y, this.width, this.height);\n    }\n}\n","import { CONSTANTS, getVerticalGap } from \"./constants.js\";\nimport Rock from \"./rock.js\";\nimport Climber from \"./climber.js\";\nimport jungle from \"../imgs/jungle.png\";\nimport scoreLogo from \"../imgs/score_logo.png\";\n\n\n\nexport default class Game {\n    constructor() {\n        this.rocks = [];\n        this.bottomRock = 0;\n        this.rockParam = {\n            bottomRock: 0\n        };\n        this.score = 0;\n\n        const canvas = document.getElementById('canvas');\n        const ctx = canvas.getContext(\"2d\");\n        this.ctx = ctx;\n        this.canvas = canvas;\n\n        this.addRocks();\n        this.climber = this.createClimber(this.rocks, this.rockParam);\n        this.startGame();\n\n        this.fps = 70;\n        this.now;\n        this.then = Date.now();\n        this.interval = 1000 / this.fps;\n        this.delta;\n\n        this.isAnimationOn = false;\n    }\n\n    addRocks() {\n        let firstRock = new Rock(250, 670);\n        this.rocks.push(firstRock);\n        this.rockMover();\n    }\n\n    rockMover() {\n        let i = this.bottomRock === 0 ? 1 : this.bottomRock;\n\n        for (i; i < this.bottomRock + 600; i++) {\n            if (i >= this.rocks.length) {\n                let x = Math.random() * (CONSTANTS.CANVAS_WIDTH - CONSTANTS.ROCK_WIDTH);\n                let y = this.rocks[i - 1].y - ((Math.random() * 80) + 35);\n                this.rocks.push(new Rock(x, y));\n            }\n        }\n\n        //Remove blocks out of canvas\n        for (let i = 0; i < this.bottomRock - 2; i++) {\n            rocks.shift();\n        }\n    }\n\n    createClimber(rocks, rockParam) {\n        return new Climber(rocks, rockParam);\n    }\n\n    startGame() {\n        // climb up\n        document.addEventListener('keyup', event => {\n            if (event.code === 'Enter' && this.climber.stay) {\n                this.climber.climb();\n            }\n\n            if (event.code === 'ArrowLeft') {\n                this.climber.holdingLeft = false;\n            }\n            if (event.code === 'ArrowRight') {\n                this.climber.holdingRight = false;\n            }\n            event.stopPropagation();\n        });\n\n        // go left/right\n        document.addEventListener('keydown', event => {\n            if (event.code === 'ArrowLeft' && !this.climber.isGameOver) {\n                this.climber.holdingLeft = true;\n            }\n            if (event.code === 'ArrowRight' && !this.climber.isGameOver) {\n                this.climber.holdingRight = true;\n            }\n            if (event.code === 'Enter' && this.climber.isGameOver) {\n                this.climber.isGameOver = false;\n                this.resetGame();\n            }\n\n            event.stopPropagation();\n        });\n\n        // let the animation begin\n        if (!this.isAnimationOn) {\n            this.loop();\n        }\n    }\n\n    showRockCounts() {\n        if (this.climber.verticalElevated > this.climber.score) {\n            this.climber.score = Math.round(this.climber.verticalElevated);\n        }\n        //create banana score logo in the upperleft of the canvas\n        this.img = new Image(20, 35);\n        this.img.src = scoreLogo;\n        this.ctx.drawImage(this.img, 10, 2, 20, 35);\n\n        //render the score showing on upperleft corner of canvas\n        this.ctx.font = \"30px Nunito\";\n        this.ctx.fillStyle = \"white\";\n        this.ctx.textAlign = \"left\";\n        this.ctx.fillText(this.climber.score, 35, 30);\n    }\n\n    resetGame() {\n        this.rocks = [];\n        this.bottomRock = 0;\n        this.rockParam = {\n            bottomRock: 0\n        };\n        this.addRocks();\n\n        this.climber = this.createClimber(this.rocks, this.rockParam);\n        this.climber.x = 250;\n        this.climber.y = 670;\n\n        this.ctx.globalAlpha = 1;\n        this.ctx.shadowColor = '#000000';\n        this.ctx.shadowBlur = 0;\n        this.startGame();\n\n    }\n\n    loop() {\n        this.isAnimationOn = true;\n        requestAnimationFrame(() => this.loop());\n\n        //sets the FPS to 60\n        this.now = Date.now();\n        this.delta = this.now - this.then;\n\n        // Moving canvas jungle background to be continued\n        let backgroundImage = new Image();\n        backgroundImage.onload = () => {\n            this.ctx.drawImage(backgroundImage, 0, 0, CONSTANTS.CANVAS_WIDTH, CONSTANTS.CANVAS_HEIGHT);\n        };\n        backgroundImage.src = jungle;\n\n        if (this.delta > this.interval) {\n            for (let j = 0; j < this.rocks.length; j++) {\n                if (this.rocks[j] !== 0) {\n                    this.rocks[j].draw();\n                }\n            }\n\n            this.climber.update();\n            this.climber.draw();\n            this.showRockCounts();\n\n            this.then = this.now - (this.delta % this.interval);\n        }\n    }\n\n}\n\n","import Game from '../src/scripts/game.js';\nimport { CONSTANTS } from '../src/scripts/constants.js';\nimport Rock from './scripts/rock.js';\n// import jungle from \"./imgs/jungle.png\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const canvas = document.getElementById('canvas');\n    const ctx = canvas.getContext(\"2d\");\n    canvas.width = CONSTANTS.CANVAS_WIDTH;\n    canvas.height = CONSTANTS.CANVAS_HEIGHT;\n\n    //invoke new game instance\n    const game = new Game();\n\n});\n\n"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","CONSTANTS","Rock","x","y","width","height","direction","moveTime","img","Image","onload","draw","banana","canvas","getElementById","ctx","getContext","drawImage","MK_IMG0","createImg","l0","MK_IMG1","l1","MK_IMG2","l2","MK_IMG3","l3","MK_IMG4","l4","MK_IMG5","l5","MK_IMG6","l6","MK_IMG7","l7","MK_IMG8","l8","MK_IMG9","l9","MK_IMG10","l10","MK_IMG11","l11","MONKEY_LEFT_IMGS","myImg","Climber","rocks","rockParam","gravity","xSpeed","ySpeed","isGameOver","verticalElevated","stay","score","holdingLeft","holdingRight","counter","monkeyImgIdx","showGameOver","i","bottomRock","rockMover","Math","random","push","shift","fillStyle","fillRect","strokeRect","shadowColor","shadowBlur","lineJoin","lineWidth","strokeStyle","globalAlpha","font","textAlign","fillText","Game","addRocks","climber","createClimber","startGame","fps","now","then","Date","interval","delta","isAnimationOn","firstRock","addEventListener","event","code","climb","stopPropagation","resetGame","loop","round","scoreLogo","requestAnimationFrame","backgroundImage","jungle","j","update","showRockCounts"],"sourceRoot":""}